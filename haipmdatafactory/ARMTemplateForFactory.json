{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "haipmdatafactory"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsnycpayrollhaipm.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/azuresql_nycpayrollagencymd')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AgencyID",
						"type": "varchar"
					},
					{
						"name": "AgencyName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_AGENCY_MD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azuresql_nycpayrollempmd')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmployeeID",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "FirstName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_EMP_MD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azuresql_nycpayrollsummary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FiscalYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AgencyName",
						"type": "varchar"
					},
					{
						"name": "TotalPaid",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_Summary"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azuresql_nycpayrolltitlemd')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TitleCode",
						"type": "varchar"
					},
					{
						"name": "TitleDescription",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_TITLE_MD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azuresql_payrolldata2020')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FiscalYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PayrollNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AgencyID",
						"type": "varchar"
					},
					{
						"name": "AgencyName",
						"type": "varchar"
					},
					{
						"name": "EmployeeID",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "AgencyStartDate",
						"type": "date"
					},
					{
						"name": "WorkLocationBorough",
						"type": "varchar"
					},
					{
						"name": "TitleCode",
						"type": "varchar"
					},
					{
						"name": "TitleDescription",
						"type": "varchar"
					},
					{
						"name": "LeaveStatusasofJune30",
						"type": "varchar"
					},
					{
						"name": "BaseSalary",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PayBasis",
						"type": "varchar"
					},
					{
						"name": "RegularHours",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RegularGrossPaid",
						"type": "float",
						"precision": 15
					},
					{
						"name": "OTHours",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalOTPaid",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalOtherPay",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_Data_2020"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azuresql_payrolldata2021')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FiscalYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PayrollNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AgencyCode",
						"type": "varchar"
					},
					{
						"name": "AgencyName",
						"type": "varchar"
					},
					{
						"name": "EmployeeID",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "AgencyStartDate",
						"type": "date"
					},
					{
						"name": "WorkLocationBorough",
						"type": "varchar"
					},
					{
						"name": "TitleCode",
						"type": "varchar"
					},
					{
						"name": "TitleDescription",
						"type": "varchar"
					},
					{
						"name": "LeaveStatusasofJune30",
						"type": "varchar"
					},
					{
						"name": "BaseSalary",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PayBasis",
						"type": "varchar"
					},
					{
						"name": "RegularHours",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RegularGrossPaid",
						"type": "float",
						"precision": 15
					},
					{
						"name": "OTHours",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalOTPaid",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalOtherPay",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_Data_2021"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datalake_AgencyMaster')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "AgencyMaster.csv",
						"folderPath": "dirpayrollfilesv",
						"fileSystem": "adlsnycpayroll-haipm-lastintial"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "AgencyID",
						"type": "String"
					},
					{
						"name": "AgencyName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datalake_EmpMaster')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "EmpMaster.csv",
						"folderPath": "dirpayrollfilesv",
						"fileSystem": "adlsnycpayroll-haipm-lastintial"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EmployeeID",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datalake_TitleMaster')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "TitleMaster.csv",
						"folderPath": "dirpayrollfilesv",
						"fileSystem": "adlsnycpayroll-haipm-lastintial"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TitleCode",
						"type": "String"
					},
					{
						"name": "TitleDescription",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datalake_payrolldata2020')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "nycpayroll_2020.csv",
						"folderPath": "dirhistoryfilesv",
						"fileSystem": "adlsnycpayroll-haipm-lastintial"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FiscalYear",
						"type": "String"
					},
					{
						"name": "PayrollNumber",
						"type": "String"
					},
					{
						"name": "AgencyID",
						"type": "String"
					},
					{
						"name": "AgencyName",
						"type": "String"
					},
					{
						"name": "EmployeeID",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "AgencyStartDate",
						"type": "String"
					},
					{
						"name": "WorkLocationBorough",
						"type": "String"
					},
					{
						"name": "TitleCode",
						"type": "String"
					},
					{
						"name": "TitleDescription",
						"type": "String"
					},
					{
						"name": "LeaveStatusasofJune30",
						"type": "String"
					},
					{
						"name": "BaseSalary",
						"type": "String"
					},
					{
						"name": "PayBasis",
						"type": "String"
					},
					{
						"name": "RegularHours",
						"type": "String"
					},
					{
						"name": "RegularGrossPaid",
						"type": "String"
					},
					{
						"name": "OTHours",
						"type": "String"
					},
					{
						"name": "TotalOTPaid",
						"type": "String"
					},
					{
						"name": "TotalOtherPay",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datalake_payrolldata2021')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "nycpayroll_2021.csv",
						"folderPath": "dirpayrollfilesv",
						"fileSystem": "adlsnycpayroll-haipm-lastintial"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FiscalYear",
						"type": "String"
					},
					{
						"name": "PayrollNumber",
						"type": "String"
					},
					{
						"name": "AgencyCode",
						"type": "String"
					},
					{
						"name": "AgencyName",
						"type": "String"
					},
					{
						"name": "EmployeeID",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "AgencyStartDate",
						"type": "String"
					},
					{
						"name": "WorkLocationBorough",
						"type": "String"
					},
					{
						"name": "TitleCode",
						"type": "String"
					},
					{
						"name": "TitleDescription",
						"type": "String"
					},
					{
						"name": "LeaveStatusasofJune30",
						"type": "String"
					},
					{
						"name": "BaseSalary",
						"type": "String"
					},
					{
						"name": "PayBasis",
						"type": "String"
					},
					{
						"name": "RegularHours",
						"type": "String"
					},
					{
						"name": "RegularGrossPaid",
						"type": "String"
					},
					{
						"name": "OTHours",
						"type": "String"
					},
					{
						"name": "TotalOTPaid",
						"type": "String"
					},
					{
						"name": "TotalOtherPay",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_datapayroll2020')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "datalake_payrolldata2020",
								"type": "DatasetReference"
							},
							"name": "payrolldata2020"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "azuresql_payrolldata2020",
								"type": "DatasetReference"
							},
							"name": "sinkdatapayrroll2020"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          FiscalYear as string,",
						"          PayrollNumber as string,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as string,",
						"          PayBasis as string,",
						"          RegularHours as string,",
						"          RegularGrossPaid as string,",
						"          OTHours as string,",
						"          TotalOTPaid as string,",
						"          TotalOtherPay as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> payrolldata2020",
						"payrolldata2020 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          FiscalYear,",
						"          PayrollNumber,",
						"          AgencyID,",
						"          AgencyName,",
						"          EmployeeID,",
						"          LastName,",
						"          FirstName,",
						"          AgencyStartDate,",
						"          WorkLocationBorough,",
						"          TitleCode,",
						"          TitleDescription,",
						"          LeaveStatusasofJune30,",
						"          BaseSalary,",
						"          PayBasis,",
						"          RegularHours,",
						"          RegularGrossPaid,",
						"          OTHours,",
						"          TotalOTPaid,",
						"          TotalOtherPay",
						"     )) ~> sinkdatapayrroll2020"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/datalake_payrolldata2020')]",
				"[concat(variables('factoryId'), '/datasets/azuresql_payrolldata2020')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_datapayroll2021')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "datalake_payrolldata2021",
								"type": "DatasetReference"
							},
							"name": "datapayroll2021"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "azuresql_payrolldata2021",
								"type": "DatasetReference"
							},
							"name": "sinhdatapayroll2021"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          FiscalYear as string,",
						"          PayrollNumber as string,",
						"          AgencyCode as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as string,",
						"          PayBasis as string,",
						"          RegularHours as string,",
						"          RegularGrossPaid as string,",
						"          OTHours as string,",
						"          TotalOTPaid as string,",
						"          TotalOtherPay as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> datapayroll2021",
						"datapayroll2021 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyCode as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          FiscalYear,",
						"          PayrollNumber,",
						"          AgencyCode,",
						"          AgencyName,",
						"          EmployeeID,",
						"          LastName,",
						"          FirstName,",
						"          AgencyStartDate,",
						"          WorkLocationBorough,",
						"          TitleCode,",
						"          TitleDescription,",
						"          LeaveStatusasofJune30,",
						"          BaseSalary,",
						"          PayBasis,",
						"          RegularHours,",
						"          RegularGrossPaid,",
						"          OTHours = RegularHours,",
						"          TotalOTPaid,",
						"          TotalOtherPay",
						"     )) ~> sinhdatapayroll2021"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/datalake_payrolldata2021')]",
				"[concat(variables('factoryId'), '/datasets/azuresql_payrolldata2021')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_agencymaster')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "datalake_AgencyMaster",
								"type": "DatasetReference"
							},
							"name": "agencymaster"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "azuresql_nycpayrollagencymd",
								"type": "DatasetReference"
							},
							"name": "sinkagencymaster"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          AgencyID as string,",
						"          AgencyName as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> agencymaster",
						"agencymaster sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          AgencyID as string,",
						"          AgencyName as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sinkagencymaster"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/datalake_AgencyMaster')]",
				"[concat(variables('factoryId'), '/datasets/azuresql_nycpayrollagencymd')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_payrollemp')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "datalake_EmpMaster",
								"type": "DatasetReference"
							},
							"name": "payrollemp"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "azuresql_nycpayrollempmd",
								"type": "DatasetReference"
							},
							"name": "sinkpayrollemp"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> payrollemp",
						"payrollemp sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sinkpayrollemp"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/datalake_EmpMaster')]",
				"[concat(variables('factoryId'), '/datasets/azuresql_nycpayrollempmd')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_payrolltitle')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "datalake_TitleMaster",
								"type": "DatasetReference"
							},
							"name": "payrolltitle"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "azuresql_nycpayrolltitlemd",
								"type": "DatasetReference"
							},
							"name": "sinkpayrolltitle"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          TitleCode as string,",
						"          TitleDescription as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> payrolltitle",
						"payrolltitle sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          TitleCode as string,",
						"          TitleDescription as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sinkpayrolltitle"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/datalake_TitleMaster')]",
				"[concat(variables('factoryId'), '/datasets/azuresql_nycpayrolltitlemd')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_2020data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_datapayroll2020",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_datapayroll2020",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"payrolldata2020": {},
									"sinkdatapayrroll2020": {}
								}
							},
							"staging": {
								"folderPath": "adlsnycpayroll-haipm-lastintial/dirstaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_datapayroll2020')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkPayrollSummary')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "azuresql_payrolldata2020",
								"type": "DatasetReference"
							},
							"name": "payrolldata2020"
						},
						{
							"dataset": {
								"referenceName": "azuresql_payrolldata2021",
								"type": "DatasetReference"
							},
							"name": "payrolldata2021"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "azuresql_nycpayrollsummary",
								"type": "DatasetReference"
							},
							"name": "sinkafteragg"
						},
						{
							"dataset": {
								"referenceName": "dirstagingdataset",
								"type": "DatasetReference"
							},
							"name": "sinkdirstaging"
						}
					],
					"transformations": [
						{
							"name": "union2021and2020"
						},
						{
							"name": "fiscalyearfilter"
						},
						{
							"name": "TotalPaid"
						},
						{
							"name": "SumTotalPaid"
						}
					],
					"scriptLines": [
						"parameters{",
						"     dataflow_param_fiscalyear as integer (2021)",
						"}",
						"source(output(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> payrolldata2020",
						"source(output(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyCode as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> payrolldata2021",
						"payrolldata2020, payrolldata2021 union(byName: true)~> union2021and2020",
						"union2021and2020 filter(toInteger(FiscalYear) >= $dataflow_param_fiscalyear) ~> fiscalyearfilter",
						"fiscalyearfilter derive(TotalPaid = RegularGrossPaid + TotalOTPaid+TotalOtherPay) ~> TotalPaid",
						"TotalPaid aggregate(groupBy(AgencyName,",
						"          FiscalYear),",
						"     TotalPaid = sum(TotalPaid)) ~> SumTotalPaid",
						"SumTotalPaid sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FiscalYear as integer,",
						"          AgencyName as string,",
						"          TotalPaid as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sinkafteragg",
						"SumTotalPaid sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1) ~> sinkdirstaging"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azuresql_payrolldata2020')]",
				"[concat(variables('factoryId'), '/datasets/azuresql_payrolldata2021')]",
				"[concat(variables('factoryId'), '/datasets/azuresql_nycpayrollsummary')]",
				"[concat(variables('factoryId'), '/datasets/dirstagingdataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dirstagingdataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "dirstaging",
						"fileSystem": "adlsnycpayroll-haipm-lastintial"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_PayrollSummary')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_agencymaster",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_agencymaster",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"agencymaster": {},
									"sinkagencymaster": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "df_payrollemp",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_payrollemp",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"payrollemp": {},
									"sinkpayrollemp": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "df_payrolltitle",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_payrolltitle",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"payrolltitle": {},
									"sinkpayrolltitle": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "df_datapayroll2020",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "df_agencymaster",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "df_payrollemp",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "df_payrolltitle",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_datapayroll2020",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"payrolldata2020": {},
									"sinkdatapayrroll2020": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "df_datapayroll2021",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "df_agencymaster",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "df_payrollemp",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "df_payrolltitle",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_datapayroll2021",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"datapayroll2021": {},
									"sinhdatapayroll2021": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "SinkPayrollSummary",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "df_datapayroll2020",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "df_datapayroll2021",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SinkPayrollSummary",
								"type": "DataFlowReference",
								"parameters": {
									"dataflow_param_fiscalyear": "2021"
								},
								"datasetParameters": {
									"payrolldata2020": {},
									"payrolldata2021": {},
									"sinkafteragg": {},
									"sinkdirstaging": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_agencymaster')]",
				"[concat(variables('factoryId'), '/dataflows/df_payrollemp')]",
				"[concat(variables('factoryId'), '/dataflows/df_payrolltitle')]",
				"[concat(variables('factoryId'), '/dataflows/df_datapayroll2020')]",
				"[concat(variables('factoryId'), '/dataflows/df_datapayroll2021')]",
				"[concat(variables('factoryId'), '/dataflows/SinkPayrollSummary')]"
			]
		}
	]
}